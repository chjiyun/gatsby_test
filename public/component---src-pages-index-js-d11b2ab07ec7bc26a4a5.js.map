{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Head.js","webpack:///./src/assets/gatsby-icon.png"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Head__WEBPACK_IMPORTED_MODULE_2__","a","createElement","pathname","title","className","to","activeStyle","color","src","alt","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","Head","_staticQueryData$data","_public_static_d_1534039394_json__WEBPACK_IMPORTED_MODULE_0__","data","site","siteMetadata","siteUrl","siteTitle","twitter","description","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","defer","defaultTitle","titleTemplate","lang","name","content","rel","href","property","gatsbyIcon","p"],"mappings":"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","file":"component---src-pages-index-js-d11b2ab07ec7bc26a4a5.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Head from \"@/components/Head\"\r\nimport \"./index.scss\"\r\n\r\nexport default () => (\r\n  <div>\r\n    <Head pathname=\"/\" title=\"首页\" />\r\n    <h1>Hi, chjiyun!</h1>\r\n    <div>\r\n      <div className=\"links\">\r\n        <Link to=\"/\" className=\"aLink\" activeStyle={{ color: \"salmon\" }}>\r\n          Home\r\n        </Link>\r\n        <Link className=\"aLink\" to=\"/about/\">\r\n          About\r\n        </Link>\r\n        <Link className=\"aLink\" to=\"/account/account/\">\r\n          Account\r\n        </Link>\r\n      </div>\r\n      <p>What a world.</p>\r\n      <img src=\"https://source.unsplash.com/random/400x200\" alt=\"\" />\r\n    </div>\r\n    <div className=\"spin\" />\r\n  </div>\r\n)\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nimport gatsbyIcon from \"@/assets/gatsby-icon.png\"\r\n\r\nconst Head = ({ pathname, title }) => {\r\n  const {\r\n    site: {\r\n      siteMetadata: { siteUrl, siteTitle, twitter, description },\r\n    },\r\n  } = useStaticQuery(graphql`\r\n    query SiteMetadata {\r\n      site {\r\n        siteMetadata {\r\n          siteUrl\r\n          siteTitle\r\n          twitter\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <Helmet\r\n      defer={false}\r\n      defaultTitle={siteTitle}\r\n      titleTemplate={`${title} | %s`}\r\n    >\r\n      <html lang=\"zh-cmn-Hans\" />\r\n      <title>{siteTitle}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {/* <meta name=\"image\" content={image} /> */}\r\n      <link rel=\"canonical\" href={`${siteUrl}${pathname}`} />\r\n      <meta name=\"docsearch:version\" content=\"2.0\" />\r\n      <meta\r\n        name=\"viewport\"\r\n        content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\r\n      />\r\n\r\n      <meta property=\"og:url\" content={siteUrl} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:locale\" content=\"zh-cmn-Hans\" />\r\n      <meta property=\"og:site_name\" content={siteTitle} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={`${siteUrl}${gatsbyIcon}`} />\r\n      <meta property=\"og:image:width\" content=\"512\" />\r\n      <meta property=\"og:image:height\" content=\"512\" />\r\n\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:site\" content={twitter} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Head\r\n","module.exports = __webpack_public_path__ + \"static/gatsby-icon-4a9773549091c227cd2eb82ccd9c5e3a.png\";"],"sourceRoot":""}